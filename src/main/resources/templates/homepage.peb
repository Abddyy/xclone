    {% extends "templates/base.peb" %}

        {% block title %}
XClone Timeline
{% endblock %}

        {% block styles %}
<style>
    /* Existing styles */
    .tweet-media {
        max-height: 300px;
        overflow: hidden;
    }
    .tweet-media img {
        width: 100%;
        object-fit: cover;
    }
    .sidebar {
        height: 100%;
        width: 250px;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        background-color: #343a40;
        overflow-x: hidden;
        padding-top: 20px;
        transition: 0.3s;
    }
    .sidebar a {
        padding: 10px 15px;
        text-decoration: none;
        font-size: 18px;
        color: #dddddd;
        display: block;
    }
    .sidebar a:hover {
        color: #ffffff;
        background-color: #666;
    }
    .content {
        margin-left: 250px;
        padding: 20px;
        width: calc(100% - 250px);
    }
    .btn-post {
        width: 80%; /* Adjusted width */
        margin-top: 10px;
        background-color: #007bff;
        color: white;
        display: block;
        margin-left: auto;
        margin-right: auto;

    }
    .list-group-item {
        background-color: #f8f9fa;
        margin-top: 8px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    }
    @media (max-width: 768px) {
        .sidebar {
            width: 100%;
            height: auto;
            position: relative;
        }
        .content {
            margin-left: 0;
            width: 100%;
        }
    }
    /* Modal styles */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 2;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.75);
        justify-content: center;
        align-items: center;
    }
    .modal-content {
        background-color: #333;
        color: #ddd;
        padding: 20px;
        border-radius: 10px;
        width: 30%;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        position: relative; /* Set position to relative */
    }
    .close-modal {
        cursor: pointer;
        position: absolute;
        right: 20px;
        top: 10px;
        font-size: 24px;
        color: #ddd;
    }
    /* Additional styles for inputs and textarea to match the dark theme */
    .modal input,
    .modal textarea {
        min-height: 50px;
        background-color: #222;
        border: 1px solid #444;
        color: #ddd;
        margin-bottom: 10px;
        padding: 10px;
        width: calc(100% - 20px);
        border-radius: 4px;
        resize: none; /* Prevent the user from resizing the textarea */
    }
    /* Style adjustments for the placeholder text */
    .modal input::placeholder,
    .modal textarea::placeholder {
        color: #555;
        opacity: 1;
    }
    /* Styling the 'Post' button inside the modal */
    .modal .btn-post {
        padding: 10px 20px;
        border-radius: 4px;
        margin-top: 10px;
        width: auto; /* Allow the button to size to its content */
        margin-left: auto; /* Align the button to the right */
    }
    /* Ensuring the modal content uses flex */
    .modal-content {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    /* Auto-expanding textarea */
    .modal textarea {
        overflow-y: hidden; /* Hide the vertical scrollbar */
    }
</style>
{% endblock %}

    {% block body %}
<div class="sidebar">
    <a href="#home">Home</a>
    <a href="#explore">Explore</a>
    <a href="#notifications">Notifications</a>
    <a href="#messages">Messages</a>
    <a href="#lists">Lists</a>
    <a href="#profile">Profile</a>
    <a href="#more">More</a>
    <button onclick="openModal()" class="btn btn-primary btn-lg">Post</button>
</div>

<div class="container content">
    <h1>XClone</h1>
    {% if errorMessage %}
        <div class="alert alert-danger">{{ errorMessage }}</div>
    {% endif %}
    <div class="list-group">
        {% for tweet in tweets %}
        <div class="list-group-item">
            <div class="d-flex w-100 justify-content-between">
                <div>
                    <h5 class="mb-1">{{ tweet.username }}</h5>
                    <p>{{ tweet.content }}</p>
                </div>
                <small class="text-muted">{{ tweet.formattedTimestamp }}</small>
            </div>
            {% if tweet.location %}
                <small class="text-muted d-block">Location: {{ tweet.location }}</small>
            {% endif %}
        {% if tweet.media %}
                <div class="tweet-media mt-2">
                    <img src="{{ tweet.media }}" alt="Media content">
                </div>
            {% endif %}
        {% if tweet.replyToTweetId %}
                <small class="text-muted">Replying to: {{ tweet.replyToTweetId }}</small>
            {% endif %}
            <form action="/app/like" method="post">
                <input type="hidden" name="tweetId" value="{{ tweet.tweetId }}">
                <button type="submit" class="btn btn-primary btn-sm">Like</button>
                <span class="badge bg-secondary">{{ tweet.likeCount }}</span>
            </form>
        </div>
        {% else %}
        <div class="list-group-item">No tweets to display.</div>
        {% endfor %}
    </div>
</div>

<!-- Modal for Posting New Tweets -->
<div class="modal" id="postModal">
    <div class="modal-content">
        <span class="close-modal" onclick="closeModal()">&times;</span>
       <form id="tweetForm" action="/app/post" method="post">
<textarea name="content" placeholder="What's happening?" required style="width: 90%; min-height: 50px; resize: none; overflow-y: hidden;"></textarea>

    <button type="submit" class="btn btn-primary btn-post">Post</button>
</form>

    </div>
</div>

<script>
function openModal() {
    document.getElementById('postModal').style.display = 'flex';
    clearModalForm();
}

function closeModal() {
    document.getElementById('postModal').style.display = 'none';
    clearModalForm();  // Optional: Clear the form also when closing if you prefer
}

function clearModalForm() {
    // Clear each field in the form
    document.querySelector('#postModal form').reset();
}

document.getElementById('tweetForm').onsubmit = function(event) {
    event.preventDefault(); // Prevent the default form submission
    var formData = new FormData(this);
    fetch('/app/post', {
        method: 'POST',
        body: formData
    }).then(response => {
        if (response.ok) {
            closeModal(); // Close modal and clear the form
            location.reload(); // Reload the page or redirect
        } else {
            alert('Failed to post tweet.');
        }
    }).catch(error => console.error('Error posting tweet:', error));
};
document.addEventListener('input', function (event) {
    if (event.target.tagName.toLowerCase() === 'textarea') {
        autoExpand(event.target);
    }
}, false);

function autoExpand(textarea) {
    // Set the height to 'auto' first to allow it to shrink if necessary
    textarea.style.height = 'auto';

    // Calculate the height and adjust as needed
    var newHeight = textarea.scrollHeight + 'px';
    textarea.style.height = newHeight;

    // If the textarea height is less than min-height, reset it to min-height
    var minHeight = parseInt(window.getComputedStyle(textarea).minHeight, 10);
    if (textarea.scrollHeight < minHeight) {
        textarea.style.height = minHeight + 'px';
    }
}

</script>
{% endblock %}
